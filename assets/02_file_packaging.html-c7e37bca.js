const e=JSON.parse('{"key":"v-b0b5d4fa","path":"/lang_zh/codes/software/desktop_app/02_file_packaging.html","title":"Python文件打包exe方法","lang":"zh-CN","frontmatter":{"title":"Python文件打包exe方法","order":2,"author":"AOSAI","date":"2023-08-30T00:00:00.000Z","category":["软件打包"],"tag":["Python","Pyinstaller","Nuitka","Mingw64"],"sticky":false,"star":false,"footer":"等我攒够六便士，就去寻找月亮","copyright":"AOSAI","description":"为什么要打包 众所周知，Python 文件不能在没有安装 Python 环境的机器上运行，所以需要通过打包这样的方式，让其可以在任何电脑上直接使用。打包方式应该会很多，但我目前查到的，有两种用的较多的打包方式，Nuitka 和 Pyinstaller。 Pyinstaller 打包 打包单个文件 pip install pyinstaller # 下载安装命令 # 打包命令的常用基础操作 Pyinstaller -F xxx.py # 打包exe Pyinstaller -F -w xxx.py # 不带控制台打包 Pyinstaller -F -w -i xxx.ico xxx.py # 指定exe图标打包","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/blog.aosai/lang_zh/codes/software/desktop_app/02_file_packaging.html"}],["meta",{"property":"og:site_name","content":"青裁的博客"}],["meta",{"property":"og:title","content":"Python文件打包exe方法"}],["meta",{"property":"og:description","content":"为什么要打包 众所周知，Python 文件不能在没有安装 Python 环境的机器上运行，所以需要通过打包这样的方式，让其可以在任何电脑上直接使用。打包方式应该会很多，但我目前查到的，有两种用的较多的打包方式，Nuitka 和 Pyinstaller。 Pyinstaller 打包 打包单个文件 pip install pyinstaller # 下载安装命令 # 打包命令的常用基础操作 Pyinstaller -F xxx.py # 打包exe Pyinstaller -F -w xxx.py # 不带控制台打包 Pyinstaller -F -w -i xxx.ico xxx.py # 指定exe图标打包"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"AOSAI"}],["meta",{"property":"article:tag","content":"Python"}],["meta",{"property":"article:tag","content":"Pyinstaller"}],["meta",{"property":"article:tag","content":"Nuitka"}],["meta",{"property":"article:tag","content":"Mingw64"}],["meta",{"property":"article:published_time","content":"2023-08-30T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Python文件打包exe方法\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-08-30T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"AOSAI\\"}]}"]]},"headers":[{"level":2,"title":"为什么要打包","slug":"为什么要打包","link":"#为什么要打包","children":[]},{"level":2,"title":"Pyinstaller 打包","slug":"pyinstaller-打包","link":"#pyinstaller-打包","children":[{"level":3,"title":"打包单个文件","slug":"打包单个文件","link":"#打包单个文件","children":[]},{"level":3,"title":"设置虚拟环境","slug":"设置虚拟环境","link":"#设置虚拟环境","children":[]},{"level":3,"title":"打包多个文件","slug":"打包多个文件","link":"#打包多个文件","children":[]}]},{"level":2,"title":"Nuitka 打包指南（windows）","slug":"nuitka-打包指南-windows","link":"#nuitka-打包指南-windows","children":[{"level":3,"title":"安装 C 编译器","slug":"安装-c-编译器","link":"#安装-c-编译器","children":[]},{"level":3,"title":"Nuitka 基本操作","slug":"nuitka-基本操作","link":"#nuitka-基本操作","children":[]}]},{"level":2,"title":"Pyinstaller 与 Nuitka 打包的对比","slug":"pyinstaller-与-nuitka-打包的对比","link":"#pyinstaller-与-nuitka-打包的对比","children":[]}],"git":{},"readingTime":{"minutes":5.42,"words":1625},"filePathRelative":"lang_zh/codes/software/desktop_app/02_file_packaging.md","localizedDate":"2023年8月30日","excerpt":"<h2> 为什么要打包</h2>\\n<p>众所周知，Python 文件不能在没有安装 Python 环境的机器上运行，所以需要通过打包这样的方式，让其可以在任何电脑上直接使用。打包方式应该会很多，但我目前查到的，有两种用的较多的打包方式，Nuitka 和 Pyinstaller。</p>\\n<h2> Pyinstaller 打包</h2>\\n<h3> 打包单个文件</h3>\\n<div class=\\"language-text line-numbers-mode\\" data-ext=\\"text\\"><pre class=\\"language-text\\"><code>pip install pyinstaller     # 下载安装命令\\n\\n# 打包命令的常用基础操作\\nPyinstaller -F xxx.py   # 打包exe\\nPyinstaller -F -w xxx.py    # 不带控制台打包\\nPyinstaller -F -w -i xxx.ico xxx.py    # 指定exe图标打包\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
